From 5e69e63753ab6c9f5601cf9a895e5d4253b1f871 Mon Sep 17 00:00:00 2001
From: sapphi-red <49056869+sapphi-red@users.noreply.github.com>
Date: Wed, 12 Feb 2025 19:27:27 +0900
Subject: [PATCH] temporary commit

---
 e2e/utils.ts                                             | 4 ++--
 packages/waku/src/lib/builder/build.ts                   | 3 ++-
 packages/waku/src/lib/plugins/vite-plugin-rsc-entries.ts | 4 +++-
 packages/waku/src/lib/plugins/vite-plugin-rsc-rsdw.ts    | 5 +++--
 4 files changed, 10 insertions(+), 6 deletions(-)

diff --git a/e2e/utils.ts b/e2e/utils.ts
index 9fad665..279fe3c 100644
--- a/e2e/utils.ts
+++ b/e2e/utils.ts
@@ -184,7 +184,6 @@ export const prepareStandaloneSetup = (fixtureName: string) => {
       });
       const wakuPackageTgz = join(standaloneDir, `waku-${version}.tgz`);
       const installScript = PACKAGE_INSTALL[packageManager](wakuPackageTgz);
-      execSync(installScript, { cwd: standaloneDir });
       const pkg = JSON.parse(
         readFileSync(join(standaloneDir, 'package.json'), 'utf-8'),
       );
@@ -194,7 +193,7 @@ export const prepareStandaloneSetup = (fixtureName: string) => {
           'utf-8',
         ),
       );
-      const pnpmOverrides = rootPkg.pnpmOverrides;
+      const pnpmOverrides = rootPkg.pnpm?.overrides;
       if (pnpmOverrides !== null && typeof pnpmOverrides === 'object') {
         switch (packageManager) {
           case 'npm': {
@@ -224,6 +223,7 @@ export const prepareStandaloneSetup = (fixtureName: string) => {
         JSON.stringify(pkg, null, 2),
         'utf-8',
       );
+      execSync(installScript, { cwd: standaloneDir });
     }
     if (mode !== 'DEV' && !built) {
       rmSync(`${join(standaloneDir, packageDir, 'dist')}`, {
diff --git a/packages/waku/src/lib/builder/build.ts b/packages/waku/src/lib/builder/build.ts
index cb5eadb..b7c3815 100644
--- a/packages/waku/src/lib/builder/build.ts
+++ b/packages/waku/src/lib/builder/build.ts
@@ -422,7 +422,8 @@ const buildClientBundle = async (
             onwarn,
             // rollup will ouput the style files related to clientEntryFiles, but since it does not find any link to them in the index.html file, it will not inject them. They are only mentioned by the standalone `clientEntryFiles`
             input: clientEntryFiles,
-            preserveEntrySignatures: 'exports-only',
+            // NOTE: rolldown does not support `preserveEntrySignatures`
+            // preserveEntrySignatures: 'exports-only',
             output: {
               entryFileNames: (chunkInfo: { name: string }) => {
                 if (clientEntryFiles[chunkInfo.name]) {
diff --git a/packages/waku/src/lib/plugins/vite-plugin-rsc-entries.ts b/packages/waku/src/lib/plugins/vite-plugin-rsc-entries.ts
index d55072e..595b6c8 100644
--- a/packages/waku/src/lib/plugins/vite-plugin-rsc-entries.ts
+++ b/packages/waku/src/lib/plugins/vite-plugin-rsc-entries.ts
@@ -26,7 +26,9 @@ globalThis.AsyncLocalStorage = require('node:async_hooks').AsyncLocalStorage;
 export function loadModule(id) {
   switch (id) {
     ${Object.entries(opts.moduleMap)
-      .map(([k, v]) => `case '${k}': return import('' + '${v}');`)
+      // NOTE: rolldown tries to resolve `import('' + 'static')`
+      //       so replaced with `import(String('static'))`
+      .map(([k, v]) => `case '${k}': return import(String('${v}'));`)
       .join('\n')}
     default: throw new Error('Cannot find module: ' + id);
   }
diff --git a/packages/waku/src/lib/plugins/vite-plugin-rsc-rsdw.ts b/packages/waku/src/lib/plugins/vite-plugin-rsc-rsdw.ts
index 69e9c3e..68ccc3a 100644
--- a/packages/waku/src/lib/plugins/vite-plugin-rsc-rsdw.ts
+++ b/packages/waku/src/lib/plugins/vite-plugin-rsc-rsdw.ts
@@ -11,7 +11,8 @@ const patchRsdw = (code: string, type: 'SERVER' | 'CLIENT') => {
   }
 
   return code.replaceAll(
-    'function requireAsyncModule(id)',
+    // NOTE: rolldown renames `requireAsyncModule` to `requireAsyncModule$1` in some places
+    /function requireAsyncModule(\$\d)?\(id\)/g,
     `
 globalThis.__WAKU_${type}_MODULE_LOADING__ ||= new Map();
 globalThis.__WAKU_${type}_MODULE_CACHE__ ||= new Map();
@@ -27,7 +28,7 @@ globalThis.__WAKU_${type}_CHUNK_LOAD__ ||= (id) => {
   return globalThis.__WAKU_${type}_MODULE_LOADING__.get(id);
 };
 globalThis.__WAKU_${type}_REQUIRE__ ||= (id) => globalThis.__WAKU_${type}_MODULE_CACHE__.get(id);
-function requireAsyncModule(id)
+function requireAsyncModule$1(id)
 `,
   );
 };
-- 
2.48.1

