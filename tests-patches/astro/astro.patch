From 614d6f6fdb76b90dbcede021bb4c87d0bc4bfc05 Mon Sep 17 00:00:00 2001
From: sapphi-red <49056869+sapphi-red@users.noreply.github.com>
Date: Wed, 5 Feb 2025 14:21:36 +0900
Subject: [PATCH] temporary commit

---
 .../src/core/build/plugins/plugin-css.ts      | 31 ++++++++++---------
 1 file changed, 16 insertions(+), 15 deletions(-)

diff --git a/packages/astro/src/core/build/plugins/plugin-css.ts b/packages/astro/src/core/build/plugins/plugin-css.ts
index c39d4da..b0ba795 100644
--- a/packages/astro/src/core/build/plugins/plugin-css.ts
+++ b/packages/astro/src/core/build/plugins/plugin-css.ts
@@ -164,21 +164,22 @@ function rollupPluginAstroBuildCSS(options: PluginOptions): VitePlugin[] {
 	const cssScopeToPlugin: VitePlugin = {
 		name: 'astro:rollup-plugin-css-scope-to',
 		renderChunk(_, chunk, __, meta) {
-			for (const id in chunk.modules) {
-				// If this CSS is scoped to its importers exports, check if those importers exports
-				// are rendered in the chunks. If they are not, we can skip bundling this CSS.
-				const modMeta = this.getModuleInfo(id)?.meta as AstroPluginCssMetadata | undefined;
-				const cssScopeTo = modMeta?.astroCss?.cssScopeTo;
-				if (cssScopeTo && !isCssScopeToRendered(cssScopeTo, Object.values(meta.chunks))) {
-					// If this CSS is not used, delete it from the chunk modules so that Vite is unable
-					// to trace that it's used
-					delete chunk.modules[id];
-					const moduleIdsIndex = chunk.moduleIds.indexOf(id);
-					if (moduleIdsIndex > -1) {
-						chunk.moduleIds.splice(moduleIdsIndex, 1);
-					}
-				}
-			}
+			// NOTE: rolldown does not support meta.chunks
+			// for (const id in chunk.modules) {
+			// 	// If this CSS is scoped to its importers exports, check if those importers exports
+			// 	// are rendered in the chunks. If they are not, we can skip bundling this CSS.
+			// 	const modMeta = this.getModuleInfo(id)?.meta as AstroPluginCssMetadata | undefined;
+			// 	const cssScopeTo = modMeta?.astroCss?.cssScopeTo;
+			// 	if (cssScopeTo && !isCssScopeToRendered(cssScopeTo, Object.values(meta.chunks))) {
+			// 		// If this CSS is not used, delete it from the chunk modules so that Vite is unable
+			// 		// to trace that it's used
+			// 		delete chunk.modules[id];
+			// 		const moduleIdsIndex = chunk.moduleIds.indexOf(id);
+			// 		if (moduleIdsIndex > -1) {
+			// 			chunk.moduleIds.splice(moduleIdsIndex, 1);
+			// 		}
+			// 	}
+			// }
 		},
 	};
 
-- 
2.47.1

