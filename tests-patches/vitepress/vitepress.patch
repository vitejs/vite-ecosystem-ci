From f99376a60a9ca18da3147691dd4199f512ce7615 Mon Sep 17 00:00:00 2001
From: sapphi-red <49056869+sapphi-red@users.noreply.github.com>
Date: Tue, 22 Apr 2025 16:39:37 +0900
Subject: [PATCH] temporary commit

---
 src/node/build/buildMPAClient.ts |  4 +-
 src/node/build/bundle.ts         | 82 ++++++++++++++++----------------
 src/node/build/render.ts         |  4 +-
 tsconfig.json                    |  2 +-
 4 files changed, 46 insertions(+), 46 deletions(-)

diff --git a/src/node/build/buildMPAClient.ts b/src/node/build/buildMPAClient.ts
index e31bc9b..51f3e55 100644
--- a/src/node/build/buildMPAClient.ts
+++ b/src/node/build/buildMPAClient.ts
@@ -6,7 +6,7 @@ const virtualEntry = 'client.js'
 export async function buildMPAClient(
   js: Record<string, string>,
   config: SiteConfig
-): Promise<Rollup.RollupOutput> {
+): Promise<Rollup.RolldownOutput> {
   const files = Object.keys(js)
   const themeFiles = files.filter((f) => !f.endsWith('.md'))
   const pages = files.filter((f) => f.endsWith('.md'))
@@ -42,5 +42,5 @@ export async function buildMPAClient(
         }
       }
     ]
-  }) as Promise<Rollup.RollupOutput>
+  }) as Promise<Rollup.RolldownOutput>
 }
diff --git a/src/node/build/bundle.ts b/src/node/build/bundle.ts
index 662e959..22b2200 100644
--- a/src/node/build/bundle.ts
+++ b/src/node/build/bundle.ts
@@ -38,8 +38,8 @@ export async function bundle(
   config: SiteConfig,
   options: BuildOptions
 ): Promise<{
-  clientResult: Rollup.RollupOutput | null
-  serverResult: Rollup.RollupOutput
+  clientResult: Rollup.RolldownOutput | null
+  serverResult: Rollup.RolldownOutput
   pageToHashMap: Record<string, string>
 }> {
   const pageToHashMap = Object.create(null) as Record<string, string>
@@ -100,7 +100,7 @@ export async function bundle(
         },
         // important so that each page chunk and the index export things for each
         // other
-        preserveEntrySignatures: 'allow-extension',
+        // preserveEntrySignatures: 'allow-extension',
         output: {
           sanitizeFileName,
           ...rollupOptions?.output,
@@ -118,41 +118,41 @@ export async function bundle(
                     ? `${config.assetsDir}/chunks/ui-custom.[hash].js`
                     : `${config.assetsDir}/chunks/[name].[hash].js`
                 },
-                manualChunks(id, ctx) {
-                  // move known framework code into a stable chunk so that
-                  // custom theme changes do not invalidate hash for all pages
-                  if (id.startsWith('\0vite')) {
-                    return 'framework'
-                  }
-                  if (id.includes('plugin-vue:export-helper')) {
-                    return 'framework'
-                  }
-                  if (
-                    id.includes(`${clientDir}/app`) &&
-                    id !== `${clientDir}/app/index.js`
-                  ) {
-                    return 'framework'
-                  }
-                  if (
-                    isEagerChunk(id, ctx.getModuleInfo) &&
-                    /@vue\/(runtime|shared|reactivity)/.test(id)
-                  ) {
-                    return 'framework'
-                  }
+                // manualChunks(id, ctx) {
+                //   // move known framework code into a stable chunk so that
+                //   // custom theme changes do not invalidate hash for all pages
+                //   if (id.startsWith('\0vite')) {
+                //     return 'framework'
+                //   }
+                //   if (id.includes('plugin-vue:export-helper')) {
+                //     return 'framework'
+                //   }
+                //   if (
+                //     id.includes(`${clientDir}/app`) &&
+                //     id !== `${clientDir}/app/index.js`
+                //   ) {
+                //     return 'framework'
+                //   }
+                //   if (
+                //     isEagerChunk(id, ctx.getModuleInfo) &&
+                //     /@vue\/(runtime|shared|reactivity)/.test(id)
+                //   ) {
+                //     return 'framework'
+                //   }
 
-                  if (
-                    (id.startsWith(`${clientDir}/theme-default`) ||
-                      !excludedModules.some((i) => id.includes(i))) &&
-                    staticImportedByEntry(
-                      id,
-                      ctx.getModuleInfo,
-                      cacheTheme,
-                      themeEntryRE
-                    )
-                  ) {
-                    return 'theme'
-                  }
-                }
+                //   if (
+                //     (id.startsWith(`${clientDir}/theme-default`) ||
+                //       !excludedModules.some((i) => id.includes(i))) &&
+                //     staticImportedByEntry(
+                //       id,
+                //       ctx.getModuleInfo,
+                //       cacheTheme,
+                //       themeEntryRE
+                //     )
+                //   ) {
+                //     return 'theme'
+                //   }
+                // }
               })
         }
       }
@@ -160,16 +160,16 @@ export async function bundle(
     configFile: config.vite?.configFile
   })
 
-  let clientResult!: Rollup.RollupOutput | null
-  let serverResult!: Rollup.RollupOutput
+  let clientResult!: Rollup.RolldownOutput | null
+  let serverResult!: Rollup.RolldownOutput
 
   await task('building client + server bundles', async () => {
     clientResult = config.mpa
       ? null
-      : ((await build(await resolveViteConfig(false))) as Rollup.RollupOutput)
+      : ((await build(await resolveViteConfig(false))) as Rollup.RolldownOutput)
     serverResult = (await build(
       await resolveViteConfig(true)
-    )) as Rollup.RollupOutput
+    )) as Rollup.RolldownOutput
   })
 
   if (config.mpa) {
diff --git a/src/node/build/render.ts b/src/node/build/render.ts
index 2b616b2..1b55336 100644
--- a/src/node/build/render.ts
+++ b/src/node/build/render.ts
@@ -23,7 +23,7 @@ export async function renderPage(
   render: (path: string) => Promise<SSGContext>,
   config: SiteConfig,
   page: string, // foo.md
-  result: Rollup.RollupOutput | null,
+  result: Rollup.RolldownOutput | null,
   appChunk: Rollup.OutputChunk | null,
   cssChunk: Rollup.OutputAsset | null,
   assets: string[],
@@ -207,7 +207,7 @@ export async function renderPage(
 function resolvePageImports(
   config: SiteConfig,
   page: string,
-  result: Rollup.RollupOutput,
+  result: Rollup.RolldownOutput,
   appChunk: Rollup.OutputChunk
 ) {
   page = config.rewrites.inv[page] || page
diff --git a/tsconfig.json b/tsconfig.json
index 6d6abf8..ed37348 100644
--- a/tsconfig.json
+++ b/tsconfig.json
@@ -6,7 +6,7 @@
     "esModuleInterop": true,
     "strict": true,
     "skipLibCheck": true,
-    "noUnusedLocals": true,
+    // "noUnusedLocals": true,
     "resolveJsonModule": true,
     "verbatimModuleSyntax": true,
     "jsx": "preserve",
-- 
2.48.1

