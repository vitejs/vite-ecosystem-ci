From 027d2171eac1a73b0d9472289d9abd1ed37a0ab4 Mon Sep 17 00:00:00 2001
From: sapphi-red <49056869+sapphi-red@users.noreply.github.com>
Date: Wed, 12 Feb 2025 18:35:32 +0900
Subject: [PATCH] temporary commit

---
 vike/node/plugin/plugins/distFileNames.ts | 115 +++++++++++-----------
 1 file changed, 58 insertions(+), 57 deletions(-)

diff --git a/vike/node/plugin/plugins/distFileNames.ts b/vike/node/plugin/plugins/distFileNames.ts
index 4a0c586..4fddfa8 100644
--- a/vike/node/plugin/plugins/distFileNames.ts
+++ b/vike/node/plugin/plugins/distFileNames.ts
@@ -42,77 +42,78 @@ function distFileNames(): Plugin {
           )
         }
         {
-          const manualChunksOriginal = rollupOutput.manualChunks
-          rollupOutput.manualChunks = function (id, ...args) {
-            if (manualChunksOriginal) {
-              if (isCallable(manualChunksOriginal)) {
-                const result = manualChunksOriginal.call(this, id, ...args)
-                if (result !== undefined) return result
-              } else {
-                assertUsage(
-                  false,
-                  "The Vite's configuration build.rollupOptions.output.manualChunks must be a function. Reach out if you need to set it to another value."
-                )
-              }
-            }
+          // const manualChunksOriginal = rollupOutput.manualChunks
+          // rollupOutput.manualChunks = function (id, ...args) {
+          //   if (manualChunksOriginal) {
+          //     if (isCallable(manualChunksOriginal)) {
+          //       const result = manualChunksOriginal.call(this, id, ...args)
+          //       if (result !== undefined) return result
+          //     } else {
+          //       assertUsage(
+          //         false,
+          //         "The Vite's configuration build.rollupOptions.output.manualChunks must be a function. Reach out if you need to set it to another value."
+          //       )
+          //     }
+          //   }
 
-            // Disable CSS bundling to workaround https://github.com/vikejs/vike/issues/1815
-            if (id.endsWith('.css')) {
-              const userRootDir = config.root
-              if (id.startsWith(userRootDir)) {
-                assertPosixPath(id)
-                assertModuleId(id)
+          //   // Disable CSS bundling to workaround https://github.com/vikejs/vike/issues/1815
+          //   if (id.endsWith('.css')) {
+          //     const userRootDir = config.root
+          //     if (id.startsWith(userRootDir)) {
+          //       assertPosixPath(id)
+          //       assertModuleId(id)
 
-                let name: string
-                const isNodeModules = id.match(/node_modules\/([^\/]+)\/(?!.*node_modules)/)
-                if (isNodeModules) {
-                  name = isNodeModules[1]!
-                } else {
-                  const filePath = getModuleFilePathAbsolute(id, config)
-                  name = filePath
-                  name = name.split('.').slice(0, -1).join('.') // remove file extension
-                  name = name.split('/').filter(Boolean).join('_')
-                }
+          //       let name: string
+          //       const isNodeModules = id.match(/node_modules\/([^\/]+)\/(?!.*node_modules)/)
+          //       if (isNodeModules) {
+          //         name = isNodeModules[1]!
+          //       } else {
+          //         const filePath = getModuleFilePathAbsolute(id, config)
+          //         name = filePath
+          //         name = name.split('.').slice(0, -1).join('.') // remove file extension
+          //         name = name.split('/').filter(Boolean).join('_')
+          //       }
 
-                // Make fileHash the same between local development and CI
-                const idStable = path.posix.relative(userRootDir, id)
-                // Don't remove `?` queries because each `id` should belong to a unique bundle.
-                const hash = getIdHash(idStable)
+          //       // Make fileHash the same between local development and CI
+          //       const idStable = path.posix.relative(userRootDir, id)
+          //       // Don't remove `?` queries because each `id` should belong to a unique bundle.
+          //       const hash = getIdHash(idStable)
 
-                return `${name}-${hash}`
-              } else {
-                let name: string
-                const isVirtualModule = id.match(/virtual:([^:]+):/)
-                if (isVirtualModule) {
-                  name = isVirtualModule[1]!
-                  assert(name)
-                } else if (
-                  // https://github.com/vikejs/vike/issues/1818#issuecomment-2298478321
-                  id.startsWith('/__uno')
-                ) {
-                  name = 'uno'
-                } else {
-                  name = 'style'
-                }
-                const hash = getIdHash(id)
-                return `${name}-${hash}`
-              }
-            }
-          }
+          //       return `${name}-${hash}`
+          //     } else {
+          //       let name: string
+          //       const isVirtualModule = id.match(/virtual:([^:]+):/)
+          //       if (isVirtualModule) {
+          //         name = isVirtualModule[1]!
+          //         assert(name)
+          //       } else if (
+          //         // https://github.com/vikejs/vike/issues/1818#issuecomment-2298478321
+          //         id.startsWith('/__uno')
+          //       ) {
+          //         name = 'uno'
+          //       } else {
+          //         name = 'style'
+          //       }
+          //       const hash = getIdHash(id)
+          //       return `${name}-${hash}`
+          //     }
+          //   }
+          // }
         }
       })
     }
   }
 }
 
-function getIdHash(id: string) {
-  return crypto.createHash('md5').update(id).digest('hex').slice(0, 8)
-}
+// function getIdHash(id: string) {
+//   return crypto.createHash('md5').update(id).digest('hex').slice(0, 8)
+// }
 
 function getAssetFileName(assetInfo: PreRenderedAsset, config: ResolvedConfig): string {
   const assetsDir = getAssetsDir(config)
   const dir = assetsDir + '/static'
-  let { name } = assetInfo
+  // let { name } = assetInfo
+  let name = assetInfo.names[0]
 
   if (!name) {
     return `${dir}/[name].[hash][extname]`
-- 
2.48.1

