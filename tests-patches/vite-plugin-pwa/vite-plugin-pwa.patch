From 6d162f66fde187d9dcc9998b8a6dbd4b16885cdf Mon Sep 17 00:00:00 2001
From: sapphi-red <49056869+sapphi-red@users.noreply.github.com>
Date: Fri, 10 Jan 2025 15:59:37 +0900
Subject: [PATCH] temporary commit

---
 src/api.ts           | 32 +++++++++++++++++++-------------
 src/plugins/build.ts |  3 ++-
 src/types.ts         |  4 ++--
 3 files changed, 23 insertions(+), 16 deletions(-)

diff --git a/src/api.ts b/src/api.ts
index 2dd7795..433735a 100644
--- a/src/api.ts
+++ b/src/api.ts
@@ -1,6 +1,6 @@
 import { resolve } from 'node:path'
 import { existsSync } from 'node:fs'
-import type { OutputBundle } from 'rollup'
+import type { OutputBundle, PluginContext } from 'rollup'
 import { cyan, yellow } from 'kolorist'
 import { generateInjectManifest, generateServiceWorker } from './modules'
 import { generateWebManifestFile } from './assets'
@@ -24,7 +24,7 @@ export async function _generateSW({ options, version, viteConfig }: PWAPluginCon
     await generateServiceWorker(version, options, viteConfig)
 }
 
-export function _generateBundle(ctx: PWAPluginContext, bundle?: OutputBundle) {
+export function _generateBundle(pluginCtx: PluginContext, ctx: PWAPluginContext, bundle?: OutputBundle) {
   const { options, viteConfig, useImportRegister } = ctx
   if (options.disable || !bundle)
     return
@@ -37,17 +37,23 @@ export function _generateBundle(ctx: PWAPluginContext, bundle?: OutputBundle) {
         `${yellow('WARNING: "theme_color" is missing from the web manifest, your application will not be able to be installed')}`,
       ].join('\n'))
     }
-    bundle[options.manifestFilename] = {
-      // @ts-expect-error: for Vite 3 support, Vite 4 has removed `isAsset` property
-      isAsset: true,
+    // NOTE: assigning to bundle[foo] is not supported by Rolldown and is discouraged by Rollup
+    // bundle[options.manifestFilename] = {
+    //   // @ts-expect-error: for Vite 3 support, Vite 4 has removed `isAsset` property
+    //   isAsset: true,
+    //   type: 'asset',
+    //   // vite 6 deprecation: replaced with names
+    //   name: undefined,
+    //   // fix vite 6 build with manifest enabled
+    //   names: [],
+    //   source: generateWebManifestFile(options),
+    //   fileName: options.manifestFilename,
+    // }
+    pluginCtx.emitFile({
       type: 'asset',
-      // vite 6 deprecation: replaced with names
-      name: undefined,
-      // fix vite 6 build with manifest enabled
-      names: [],
-      source: generateWebManifestFile(options),
       fileName: options.manifestFilename,
-    }
+      source: generateWebManifestFile(options),
+    })
   }
 
   // if virtual register is requested, do not inject.
@@ -142,8 +148,8 @@ export function createAPI(ctx: PWAPluginContext) {
         },
       }
     },
-    generateBundle(bundle) {
-      return _generateBundle(ctx, bundle)
+    generateBundle(pluginCtx, bundle) {
+      return _generateBundle(pluginCtx, ctx, bundle)
     },
     async generateSW() {
       return await _generateSW(ctx)
diff --git a/src/plugins/build.ts b/src/plugins/build.ts
index 529200b..abd3d14 100644
--- a/src/plugins/build.ts
+++ b/src/plugins/build.ts
@@ -35,7 +35,8 @@ export function BuildPlugin(ctx: PWAPluginContext) {
       if (pwaAssetsGenerator)
         pwaAssetsGenerator.injectManifestIcons()
 
-      return _generateBundle(ctx, bundle)
+      // @ts-expect-error rolldown type incompat
+      return _generateBundle(this, ctx, bundle)
     },
     closeBundle: {
       sequential: true,
diff --git a/src/types.ts b/src/types.ts
index 808ed16..bf8d4a7 100644
--- a/src/types.ts
+++ b/src/types.ts
@@ -1,6 +1,6 @@
 import type { BuildOptions, InlineConfig, Plugin, ResolvedConfig, UserConfig } from 'vite'
 import type { GenerateSWOptions, InjectManifestOptions, ManifestEntry } from 'workbox-build'
-import type { OutputBundle, RollupOptions } from 'rollup'
+import type { OutputBundle, PluginContext, RollupOptions } from 'rollup'
 import type { BuiltInPreset, Preset } from '@vite-pwa/assets-generator/config'
 import type { HtmlLinkPreset } from '@vite-pwa/assets-generator/api'
 import type { PWAAssetsGenerator } from './pwa-assets/types'
@@ -706,7 +706,7 @@ export interface VitePluginPWAAPI {
   /*
    * Explicitly generate the manifests.
    */
-  generateBundle(bundle?: OutputBundle): OutputBundle | undefined
+  generateBundle(pluginCtx: PluginContext, bundle?: OutputBundle): OutputBundle | undefined
   /*
    * Explicitly generate the PWA services worker.
    */
-- 
2.47.0

