From 3cea7b91c19eb1b3e95d5003ffd2bf07c96e77e8 Mon Sep 17 00:00:00 2001
From: sapphi-red <49056869+sapphi-red@users.noreply.github.com>
Date: Wed, 26 Mar 2025 16:38:37 +0900
Subject: [PATCH] temporary commit

---
 .../qwik/src/optimizer/src/plugins/plugin.ts  | 44 +++++++++----------
 .../qwik/src/optimizer/src/plugins/rollup.ts  | 17 +++----
 .../qwik/src/optimizer/src/plugins/vite.ts    | 10 +++--
 .../src/optimizer/src/plugins/vite.unit.ts    |  8 ++--
 4 files changed, 42 insertions(+), 37 deletions(-)

diff --git a/packages/qwik/src/optimizer/src/plugins/plugin.ts b/packages/qwik/src/optimizer/src/plugins/plugin.ts
index 560af23..3699727 100644
--- a/packages/qwik/src/optimizer/src/plugins/plugin.ts
+++ b/packages/qwik/src/optimizer/src/plugins/plugin.ts
@@ -17,7 +17,7 @@ import type {
   TransformModuleInput,
   TransformModulesOptions,
   TransformOutput,
-  SmartEntryStrategy,
+  // SmartEntryStrategy,
 } from '../types';
 import { createLinter, type QwikLinter } from './eslint-plugin';
 import type { LoadResult, OutputBundle, ResolveIdResult, TransformResult } from 'rollup';
@@ -612,7 +612,7 @@ export function createQwikPlugin(optimizerOptions: OptimizerOptions = {}) {
     ctx: Rollup.PluginContext,
     code: string,
     id: string,
-    transformOpts: Parameters<Extract<Plugin['transform'], Function>>[2] = {}
+    transformOpts: Partial<Parameters<Extract<Plugin['transform'], Function>>[2]> = {}
   ): Promise<TransformResult> {
     if (id.startsWith('\0')) {
       return;
@@ -728,7 +728,8 @@ export function createQwikPlugin(optimizerOptions: OptimizerOptions = {}) {
               ctx.emitFile({
                 id: key,
                 type: 'chunk',
-                preserveSignature: 'allow-extension',
+                // NOTE: rolldown does not support preserveSignature
+                // preserveSignature: 'allow-extension',
               });
             }
           }
@@ -739,9 +740,8 @@ export function createQwikPlugin(optimizerOptions: OptimizerOptions = {}) {
       // unchanged imports are not missing in our internal transform cache
       // This can happen in the repl when the plugin is re-initialized
       // and possibly in other places
-      for (const id of deps.values()) {
-        await ctx.load({ id });
-      }
+      // NOTE: this should be Promise.all rather than a for-loop to avoid deadlocks
+      await Promise.all([...deps.values()].map(id => ctx.load({ id })))
 
       ctx.addWatchFile(id);
 
@@ -877,21 +877,21 @@ export const manifest = ${JSON.stringify(manifest)};\n`;
     }
   }
 
-  function manualChunks(id: string, { getModuleInfo }: Rollup.ManualChunkMeta) {
-    if ((opts.entryStrategy as SmartEntryStrategy).manual) {
-      const module = getModuleInfo(id)!;
-      const segment = module.meta.segment as SegmentAnalysis | undefined;
-
-      if (segment) {
-        const { hash } = segment;
-        const chunkName = (opts.entryStrategy as SmartEntryStrategy).manual![hash] || segment.entry;
-        if (chunkName) {
-          return chunkName;
-        }
-      }
-    }
-    return null;
-  }
+  // function manualChunks(id: string, { getModuleInfo }: Rollup.ManualChunkMeta) {
+  //   if ((opts.entryStrategy as SmartEntryStrategy).manual) {
+  //     const module = getModuleInfo(id)!;
+  //     const segment = module.meta.segment as SegmentAnalysis | undefined;
+
+  //     if (segment) {
+  //       const { hash } = segment;
+  //       const chunkName = (opts.entryStrategy as SmartEntryStrategy).manual![hash] || segment.entry;
+  //       if (chunkName) {
+  //         return chunkName;
+  //       }
+  //     }
+  //   }
+  //   return null;
+  // }
 
   return {
     buildStart,
@@ -915,7 +915,7 @@ export const manifest = ${JSON.stringify(manifest)};\n`;
     setSourceMapSupport,
     configureServer,
     handleHotUpdate,
-    manualChunks,
+    // manualChunks,
   };
 }
 
diff --git a/packages/qwik/src/optimizer/src/plugins/rollup.ts b/packages/qwik/src/optimizer/src/plugins/rollup.ts
index f03e73d..6d10138 100644
--- a/packages/qwik/src/optimizer/src/plugins/rollup.ts
+++ b/packages/qwik/src/optimizer/src/plugins/rollup.ts
@@ -123,6 +123,7 @@ export function qwikRollup(qwikRollupOpts: QwikRollupPluginOptions = {}): any {
       if (opts.target === 'client') {
         // client build
         const optimizer = qwikPlugin.getOptimizer();
+        // @ts-expect-error rolldown type incompat
         const outputAnalyzer = qwikPlugin.createOutputAnalyzer(rollupBundle);
         const manifest = await outputAnalyzer.generateManifest();
         manifest.platform = {
@@ -187,7 +188,7 @@ export function normalizeRollupOutputOptionsObject(
   const outputOpts: Rollup.OutputOptions = { ...rollupOutputOptsObj };
   const opts = qwikPlugin.getOptions();
   const optimizer = qwikPlugin.getOptimizer();
-  const manualChunks = qwikPlugin.manualChunks;
+  // const manualChunks = qwikPlugin.manualChunks;
   if (opts.target === 'client') {
     // client output
     if (!outputOpts.assetFileNames) {
@@ -244,13 +245,13 @@ export function normalizeRollupOutputOptionsObject(
   if (opts.target === 'client') {
     // client should always be es
     outputOpts.format = 'es';
-    const prevManualChunks = outputOpts.manualChunks;
-    if (prevManualChunks && typeof prevManualChunks !== 'function') {
-      throw new Error('manualChunks must be a function');
-    }
-    outputOpts.manualChunks = prevManualChunks
-      ? (id, meta) => prevManualChunks(id, meta) || manualChunks(id, meta)
-      : manualChunks;
+    // const prevManualChunks = outputOpts.manualChunks;
+    // if (prevManualChunks && typeof prevManualChunks !== 'function') {
+    //   throw new Error('manualChunks must be a function');
+    // }
+    // outputOpts.manualChunks = prevManualChunks
+    //   ? (id, meta) => prevManualChunks(id, meta) || manualChunks(id, meta)
+    //   : manualChunks;
   }
 
   if (!outputOpts.dir) {
diff --git a/packages/qwik/src/optimizer/src/plugins/vite.ts b/packages/qwik/src/optimizer/src/plugins/vite.ts
index b30f102..8467cb6 100644
--- a/packages/qwik/src/optimizer/src/plugins/vite.ts
+++ b/packages/qwik/src/optimizer/src/plugins/vite.ts
@@ -336,9 +336,11 @@ export function qwikVite(qwikViteOpts: QwikVitePluginOptions = {}): any {
           },
           rollupOptions: {
             output: {
+              // NOTE: rolldown does not support hoistTransitiveImports
               // We have waterfall prevention so don't hoist
-              hoistTransitiveImports: false,
-              manualChunks: qwikPlugin.manualChunks,
+              // hoistTransitiveImports: false,
+              // NOTE: rolldown does not support manualChunks
+              // manualChunks: qwikPlugin.manualChunks,
             },
           },
         },
@@ -367,7 +369,8 @@ export function qwikVite(qwikViteOpts: QwikVitePluginOptions = {}): any {
             useAssetsDir,
             buildOutputDir
           ),
-          preserveEntrySignatures: 'exports-only',
+          // NOTE: rolldown does not support preserveEntrySignatures
+          // preserveEntrySignatures: 'exports-only',
           onwarn: (warning, warn) => {
             if (warning.plugin === 'typescript' && warning.message.includes('outputToFilesystem')) {
               return;
@@ -525,6 +528,7 @@ export function qwikVite(qwikViteOpts: QwikVitePluginOptions = {}): any {
 
         if (opts.target === 'client') {
           // client build
+          // @ts-expect-error rolldown type incompat
           const outputAnalyzer = qwikPlugin.createOutputAnalyzer(rollupBundle);
 
           for (const [fileName, b] of Object.entries(rollupBundle)) {
diff --git a/packages/qwik/src/optimizer/src/plugins/vite.unit.ts b/packages/qwik/src/optimizer/src/plugins/vite.unit.ts
index f75d71e..188ea2e 100644
--- a/packages/qwik/src/optimizer/src/plugins/vite.unit.ts
+++ b/packages/qwik/src/optimizer/src/plugins/vite.unit.ts
@@ -19,9 +19,9 @@ const chunkInfoMocks: Rollup.PreRenderedChunk[] = [
     facadeModuleId: 'chunk.tsx',
     isDynamicEntry: false,
     isEntry: false,
-    isImplicitEntry: false,
+    // isImplicitEntry: false,
     moduleIds: ['chunk.tsx'],
-    type: 'chunk',
+    // type: 'chunk',
   },
   {
     exports: [''],
@@ -29,9 +29,9 @@ const chunkInfoMocks: Rollup.PreRenderedChunk[] = [
     facadeModuleId: cwd + '/app/chunk.tsx',
     isDynamicEntry: false,
     isEntry: false,
-    isImplicitEntry: false,
+    // isImplicitEntry: false,
     moduleIds: [cwd + '/app/chunk.tsx'],
-    type: 'chunk',
+    // type: 'chunk',
   },
 ];
 
-- 
2.48.1

